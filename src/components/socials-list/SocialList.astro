---
import GitHub from '@components/icons/GitHub.astro';
import LinkedIn from '@components/icons/LinkedIn.astro';
import PDF from '@components/icons/PDF.astro';
import './sociaList.css';
---

<script>
  // Funci√≥n para generar y descargar PDF con dise√±o moderno de dos columnas
  async function generatePDF() {
    try {
      // Importar jsPDF din√°micamente
      const { default: jsPDF } = await import('jspdf');

      // Crear PDF
      const pdf = new jsPDF('p', 'mm', 'a4');
      const pageWidth = 210;
      const pageHeight = 297;
      let yPosition = 20;

      // Configurar colores del dise√±o moderno
      const primaryColor = [220, 58, 43]; // #DC3A2B - Naranja principal
      const secondaryColor = [225, 133, 16]; // #E18510 - Naranja secundario
      const darkColor = [51, 51, 51]; // #333 - Gris oscuro
      const mediumGray = [102, 102, 102]; // #666 - Gris medio
      const lightGray = [136, 136, 136]; // #888 - Gris claro
      const veryLightGray = [250, 250, 250]; // #FAFAFA - Gris muy claro
      const white = [255, 255, 255];

      // Funci√≥n para agregar texto con estilo
      function addText(text, x, y, options = {}) {
        const {
          fontSize = 12,
          fontStyle = 'normal',
          color = darkColor,
          align = 'left',
          maxWidth = pageWidth - 30
        } = options;

        pdf.setFontSize(fontSize);
        pdf.setFont('helvetica', fontStyle);
        pdf.setTextColor(color[0], color[1], color[2]);

        if (typeof text === 'string' && text.length > 0) {
          const lines = pdf.splitTextToSize(text, maxWidth);
          pdf.text(lines, x, y, { align });
          // Calcular altura real del texto con mejor precisi√≥n
          return lines.length * (fontSize * 0.35) + (lines.length - 1) * 1;
        }
        return 0;
      }

      // Funci√≥n para agregar l√≠nea horizontal
      function addLine(x, y, width, color = primaryColor, thickness = 0.5) {
        pdf.setDrawColor(color[0], color[1], color[2]);
        pdf.setLineWidth(thickness);
        pdf.line(x, y, x + width, y);
      }

      // Funci√≥n para agregar rect√°ngulo de fondo
      function addBackgroundRect(x, y, width, height, color = primaryColor) {
        pdf.setFillColor(color[0], color[1], color[2]);
        pdf.rect(x, y, width, height, 'F');
      }

      // Funci√≥n para agregar c√≠rculo
      function addCircle(x, y, radius, color = primaryColor) {
        pdf.setFillColor(color[0], color[1], color[2]);
        pdf.circle(x, y, radius, 'F');
      }

      // Funci√≥n para agregar skill tag
      function addSkillTag(text, x, y, color = secondaryColor) {
        const textWidth = pdf.getTextWidth(text);
        const padding = 3;
        const tagWidth = textWidth + padding * 2;
        const tagHeight = 6;

        // Fondo del tag
        addBackgroundRect(x, y - tagHeight / 2, tagWidth, tagHeight, color);

        // Texto del tag
        addText(text, x + padding, y + 1, {
          fontSize: 8,
          fontStyle: 'bold',
          color: white
        });

        return tagWidth + 2; // Espacio entre tags
      }

      // HEADER MODERNO - Dise√±o limpio y profesional
      addBackgroundRect(0, 0, pageWidth, 50, primaryColor);

      // Nombre principal
      addText('JOSE LUIS CARVAJAL', pageWidth / 2, 20, {
        fontSize: 24,
        fontStyle: 'bold',
        color: white,
        align: 'center'
      });

      // T√≠tulo profesional
      addText('Back-end Developer', pageWidth / 2, 28, {
        fontSize: 14,
        fontStyle: 'normal',
        color: white,
        align: 'center'
      });

      // Ubicaci√≥n
      addText('üìç Calarc√° - Quind√≠o, Colombia', pageWidth / 2, 35, {
        fontSize: 10,
        color: white,
        align: 'center'
      });

      // Contacto en header
      addText('linkedin.com/in/krba-jose/ ‚Ä¢ github.com/carvaj10', pageWidth / 2, 42, {
        fontSize: 9,
        color: white,
        align: 'center'
      });

      yPosition = 60;

      // DISE√ëO DE DOS COLUMNAS
      const leftColumnX = 15;
      const rightColumnX = 110;
      const columnWidth = 85;

      // COLUMNA IZQUIERDA
      let leftY = yPosition;

      // PERFIL PROFESIONAL
      addText('Perfil Profesional', leftColumnX, leftY, {
        fontSize: 14,
        fontStyle: 'bold',
        color: primaryColor
      });

      addLine(leftColumnX, leftY + 2, columnWidth, primaryColor, 1);
      leftY += 8;

      const profileText = `Especializado en an√°lisis de datos y tecnolog√≠as geo espaciales, con enfoque en optimizaci√≥n de rutas y visualizaci√≥n de informaci√≥n en mapas. Me apasiona transformar datos complejos en soluciones pr√°cticas mediante Python y SQL, creando interfaces geogr√°ficas intuitivas que generan insights valiosos y mejoran la toma de decisiones basadas en localizaci√≥n.`;

      const profileHeight = addText(profileText, leftColumnX, leftY, {
        fontSize: 10,
        color: darkColor,
        maxWidth: columnWidth
      });
      leftY += profileHeight + 15;

      // HABILIDADES T√âCNICAS
      addText('Habilidades T√©cnicas', leftColumnX, leftY, {
        fontSize: 14,
        fontStyle: 'bold',
        color: primaryColor
      });

      addLine(leftColumnX, leftY + 2, columnWidth, primaryColor, 1);
      leftY += 8;

      // Lenguajes de Programaci√≥n
      addText('Lenguajes de Programaci√≥n', leftColumnX, leftY, {
        fontSize: 11,
        fontStyle: 'bold',
        color: darkColor
      });
      leftY += 6;

      let tagX = leftColumnX;
      const languages = ['Python', 'SQL', 'JavaScript', 'TypeScript', 'C#'];
      languages.forEach((lang, index) => {
        const tagWidth = pdf.getTextWidth(lang) + 6;
        if (tagX + tagWidth > leftColumnX + columnWidth) {
          tagX = leftColumnX;
          leftY += 8;
        }
        tagX += addSkillTag(lang, tagX, leftY);
      });
      leftY += 12;

      // Frameworks y Librer√≠as
      addText('Frameworks y Librer√≠as', leftColumnX, leftY, {
        fontSize: 11,
        fontStyle: 'bold',
        color: darkColor
      });
      leftY += 6;

      tagX = leftColumnX;
      const frameworks = [
        'Pandas',
        'Scikit-learn',
        'GeoPandas',
        'NetworkX',
        'Folium',
        'React Native',
        'Flet',
        'FastMCP'
      ];
      frameworks.forEach((framework, index) => {
        const tagWidth = pdf.getTextWidth(framework) + 6;
        if (tagX + tagWidth > leftColumnX + columnWidth) {
          tagX = leftColumnX;
          leftY += 8;
        }
        tagX += addSkillTag(framework, tagX, leftY);
      });
      leftY += 12;

      // Bases de Datos
      addText('Bases de Datos', leftColumnX, leftY, {
        fontSize: 11,
        fontStyle: 'bold',
        color: darkColor
      });
      leftY += 6;

      tagX = leftColumnX;
      const databases = ['SQL Server', 'SQLite', 'PostgreSQL', 'MongoDB'];
      databases.forEach((db, index) => {
        const tagWidth = pdf.getTextWidth(db) + 6;
        if (tagX + tagWidth > leftColumnX + columnWidth) {
          tagX = leftColumnX;
          leftY += 8;
        }
        tagX += addSkillTag(db, tagX, leftY);
      });
      leftY += 12;

      // Herramientas
      addText('Herramientas', leftColumnX, leftY, {
        fontSize: 11,
        fontStyle: 'bold',
        color: darkColor
      });
      leftY += 6;

      tagX = leftColumnX;
      const tools = ['Selenium', 'Playwright', 'BeautifulSoup', 'Docker', 'Git', 'Figma'];
      tools.forEach((tool, index) => {
        const tagWidth = pdf.getTextWidth(tool) + 6;
        if (tagX + tagWidth > leftColumnX + columnWidth) {
          tagX = leftColumnX;
          leftY += 8;
        }
        tagX += addSkillTag(tool, tagX, leftY);
      });

      // COLUMNA DERECHA
      let rightY = yPosition;

      // EXPERIENCIA LABORAL
      addText('Experiencia Laboral', rightColumnX, rightY, {
        fontSize: 14,
        fontStyle: 'bold',
        color: primaryColor
      });

      addLine(rightColumnX, rightY + 2, columnWidth, primaryColor, 1);
      rightY += 8;

      // Experiencia 1: Celuweb
      addText('T√©cnico en Desarrollo de Datos', rightColumnX, rightY, {
        fontSize: 12,
        fontStyle: 'bold',
        color: darkColor
      });
      rightY += 5;

      addText('Celuweb', rightColumnX, rightY, {
        fontSize: 10,
        fontStyle: 'bold',
        color: secondaryColor
      });

      addText('Marzo 2023 - Presente ‚Ä¢ Armenia, Quind√≠o', rightColumnX + 20, rightY, {
        fontSize: 9,
        color: lightGray
      });
      rightY += 8;

      const celuwebAchievements = [
        'Constru√≠ sistemas ETL usando SQL Server, optimizando consultas complejas',
        'Implement√© procesos de extracci√≥n de datos a gran escala con Selenium y Playwright',
        'Desarroll√© pipelines de an√°lisis predictivo con Pandas y Scikit-learn',
        'Dise√±√© rutas eficientes usando GeoPandas y NetworkX',
        'Integr√© APIs de mapas para visualizar datos geogr√°ficos',
        'Cre√© dashboards interactivos para an√°lisis de datos empresariales'
      ];

      celuwebAchievements.forEach((achievement, index) => {
        addCircle(rightColumnX + 2, rightY + 1, 1, primaryColor);
        const achievementHeight = addText(`‚Ä¢ ${achievement}`, rightColumnX + 6, rightY, {
          fontSize: 9,
          color: darkColor,
          maxWidth: columnWidth - 10
        });
        rightY += achievementHeight + 2;
      });
      rightY += 8;

      // Verificar si necesitamos nueva p√°gina
      if (rightY > pageHeight - 100) {
        pdf.addPage();
        rightY = 20;
      }

      // Experiencia 2: Freelance
      addText('T√©cnico en Automatizaci√≥n, Datos y Soporte Acad√©mico', rightColumnX, rightY, {
        fontSize: 12,
        fontStyle: 'bold',
        color: darkColor
      });
      rightY += 5;

      addText('Freelance', rightColumnX, rightY, {
        fontSize: 10,
        fontStyle: 'bold',
        color: secondaryColor
      });

      addText('Junio 2022 - Diciembre 2022 ‚Ä¢ Calarc√°, Quind√≠o', rightColumnX + 20, rightY, {
        fontSize: 9,
        color: lightGray
      });
      rightY += 8;

      const freelanceAchievements = [
        'Automatiz√© procesos de recolecci√≥n de datos mediante web scraping',
        'Desarroll√© dashboards y reportes en Excel para visualizaci√≥n de datos',
        'Escrib√≠ scripts en Python para transformar archivos y limpiar datos',
        'Apoy√© a estudiantes universitarios con proyectos acad√©micos',
        'Asesor√© en estructuraci√≥n y an√°lisis de bases de datos',
        'Reconocido por puntualidad y soluciones pr√°cticas'
      ];

      freelanceAchievements.forEach((achievement, index) => {
        addCircle(rightColumnX + 2, rightY + 1, 1, primaryColor);
        const achievementHeight = addText(`‚Ä¢ ${achievement}`, rightColumnX + 6, rightY, {
          fontSize: 9,
          color: darkColor,
          maxWidth: columnWidth - 10
        });
        rightY += achievementHeight + 2;
      });
      rightY += 8;

      // Verificar si necesitamos nueva p√°gina
      if (rightY > pageHeight - 100) {
        pdf.addPage();
        rightY = 20;
      }

      // Experiencia 3: Proyecto Personal
      addText('T√©cnico en Optimizaci√≥n de Rutas', rightColumnX, rightY, {
        fontSize: 12,
        fontStyle: 'bold',
        color: darkColor
      });
      rightY += 5;

      addText('Proyecto Personal', rightColumnX, rightY, {
        fontSize: 10,
        fontStyle: 'bold',
        color: secondaryColor
      });

      addText('Marzo 2022 - Junio 2022 ‚Ä¢ Calarc√°, Quind√≠o', rightColumnX + 25, rightY, {
        fontSize: 9,
        color: lightGray
      });
      rightY += 8;

      const projectAchievements = [
        'Implement√© algoritmo de optimizaci√≥n que redujo 28% los tiempos de entrega',
        'Automatiz√© flujo de datos con pipeline ETL integrando m√∫ltiples fuentes',
        'Us√© NetworkX para calcular trayectorias eficientes',
        'Present√© resultados en dashboards con visualizaci√≥n interactiva'
      ];

      projectAchievements.forEach((achievement, index) => {
        addCircle(rightColumnX + 2, rightY + 1, 1, primaryColor);
        const achievementHeight = addText(`‚Ä¢ ${achievement}`, rightColumnX + 6, rightY, {
          fontSize: 9,
          color: darkColor,
          maxWidth: columnWidth - 10
        });
        rightY += achievementHeight + 2;
      });
      rightY += 15;

      // PROYECTOS DESTACADOS
      addText('Proyectos Destacados', rightColumnX, rightY, {
        fontSize: 14,
        fontStyle: 'bold',
        color: primaryColor
      });

      addLine(rightColumnX, rightY + 2, columnWidth, primaryColor, 1);
      rightY += 8;

      // Proyecto 1: GameCritic
      addText('GameCritic - Aplicaci√≥n M√≥vil', rightColumnX, rightY, {
        fontSize: 11,
        fontStyle: 'bold',
        color: darkColor
      });
      rightY += 4;

      addText('React Native ‚Ä¢ Expo ‚Ä¢ Axios ‚Ä¢ Tailwind CSS', rightColumnX, rightY, {
        fontSize: 9,
        fontStyle: 'bold',
        color: secondaryColor
      });

      addText('GitHub: carvaj10/curso-react-native', rightColumnX, rightY + 3, {
        fontSize: 8,
        color: lightGray
      });
      rightY += 8;

      const gamecriticDesc =
        'Aplicaci√≥n m√≥vil que permite ver rese√±as de juegos populares con sistema de geolocalizaci√≥n para encontrar tiendas f√≠sicas cercanas. Incluye modo oscuro y navegaci√≥n intuitiva.';
      const gamecriticHeight = addText(gamecriticDesc, rightColumnX, rightY, {
        fontSize: 9,
        color: darkColor,
        maxWidth: columnWidth
      });
      rightY += gamecriticHeight + 8;

      // Verificar si necesitamos nueva p√°gina
      if (rightY > pageHeight - 80) {
        pdf.addPage();
        rightY = 20;
      }

      // Proyecto 2: KRBA Manhwa Reader
      addText('KRBA Manhwa Reader - Aplicaci√≥n Multiplataforma', rightColumnX, rightY, {
        fontSize: 11,
        fontStyle: 'bold',
        color: darkColor
      });
      rightY += 4;

      addText('Python ‚Ä¢ Flet ‚Ä¢ Requests ‚Ä¢ SQLite', rightColumnX, rightY, {
        fontSize: 9,
        fontStyle: 'bold',
        color: secondaryColor
      });

      addText('GitHub: carvaj10/app-mawha', rightColumnX, rightY + 3, {
        fontSize: 8,
        color: lightGray
      });
      rightY += 8;

      const manhwaDesc =
        'Aplicaci√≥n multiplataforma desarrollada en Python con Flet para lectura de manhwas. Incluye biblioteca personalizable, modo offline, notificaciones y sincronizaci√≥n entre dispositivos.';
      const manhwaHeight = addText(manhwaDesc, rightColumnX, rightY, {
        fontSize: 9,
        color: darkColor,
        maxWidth: columnWidth
      });
      rightY += manhwaHeight + 8;

      // Verificar si necesitamos nueva p√°gina
      if (rightY > pageHeight - 80) {
        pdf.addPage();
        rightY = 20;
      }

      // Proyecto 3: MCP Libres
      addText('MCP Libres - Colecci√≥n de Model Context Protocols', rightColumnX, rightY, {
        fontSize: 11,
        fontStyle: 'bold',
        color: darkColor
      });
      rightY += 4;

      addText('Python ‚Ä¢ FastMCP ‚Ä¢ Open Source', rightColumnX, rightY, {
        fontSize: 9,
        fontStyle: 'bold',
        color: secondaryColor
      });

      addText('GitHub: carvaj10/mcp_libres', rightColumnX, rightY + 3, {
        fontSize: 8,
        color: lightGray
      });
      rightY += 8;

      const mcpDesc =
        'Colecci√≥n completa de 11 MCPs especializados desarrollados con FastMCP para diferentes tareas de desarrollo y automatizaci√≥n. Incluye herramientas para gesti√≥n de archivos, procesamiento de texto, an√°lisis de datos y m√°s.';
      const mcpHeight = addText(mcpDesc, rightColumnX, rightY, {
        fontSize: 9,
        color: darkColor,
        maxWidth: columnWidth
      });

      // Descargar el PDF
      pdf.save('CV_Jose_Luis_Carvajal.pdf');
    } catch (error) {
      console.error('Error al generar PDF:', error);
      alert('Error al generar el PDF. Aseg√∫rate de que la librer√≠a jsPDF est√© instalada.');
    }
  }

  // Agregar event listener cuando el DOM est√© listo
  document.addEventListener('DOMContentLoaded', () => {
    const pdfButton = document.getElementById('download-pdf');
    if (pdfButton) {
      pdfButton.addEventListener('click', generatePDF);
    }
  });

  // Tambi√©n agregar el listener despu√©s de navegaci√≥n de Astro
  document.addEventListener('astro:after-swap', () => {
    const pdfButton = document.getElementById('download-pdf');
    if (pdfButton) {
      pdfButton.addEventListener('click', generatePDF);
    }
  });
</script>

<ul class="social">
  <li class="social__item">
    <a
      class="social__link"
      href="https://www.linkedin.com/in/krba-jose/"
      target="_blank"
      rel="noopener noreferrer"
      aria-label="link para ir a LinkedIn"
    >
      <LinkedIn class="social__icon" />
      LinkedIn</a
    >
  </li>
  <li class="social__item">
    <a
      class="social__link"
      href="https://github.com/carvaj10"
      target="_blank"
      rel="noopener noreferrer"
      aria-label="link para ir a Github"
    >
      <GitHub class="social__icon" />
      Github</a
    >
  </li>
  <li class="social__item">
    <button class="social__link social__button" id="download-pdf" aria-label="Descargar CV en PDF">
      <PDF class="social__icon" />
      CV PDF</button
    >
  </li>
  <!-- <li class="social__item">
    <a
      class="social__link"
      href="https://www.instagram.com/j0seluu_s/"
      target="_blank"
      rel="noopener noreferrer"
      aria-label="link para ir a Instagram">Instagram</a
    >
  </li> -->
</ul>
